{"ast":null,"code":"var _jsxFileName = \"/Users/pedro.sotoibm.com/Desktop/ReactJS Full course/food-order-app/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react/cjs/react.development\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADDING_ITEM\") {\n    const updatedArray = state.items.includes(action.item) ? state.items.find(action.items.name) : state.items.concat(action.item);\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  if (action.type === \"UPDATE_AMOUNT\") return defaultCartState;\n};\n\nconst CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const cartCtx = useContext(CartContext);\n  const [Cartstate, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADDING_ITEM',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: Cartstate.items,\n    totalAmount: Cartstate.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartContextProvider, \"hs4xjVrvfneGwULC3rtO4lKedoU=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/pedro.sotoibm.com/Desktop/ReactJS Full course/food-order-app/src/Store/CartProvider.js"],"names":["useContext","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedArray","includes","item","find","name","concat","updatedItems","updatedTotal","price","amount","CartContextProvider","children","cartCtx","Cartstate","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,6BAAvC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,aAAnB,EAAkC;AAC9B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,QAAZ,CAAqBH,MAAM,CAACI,IAA5B,IAAoCL,KAAK,CAACH,KAAN,CAAYS,IAAZ,CAAiBL,MAAM,CAACJ,KAAP,CAAaU,IAA9B,CAApC,GAAyEP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACI,IAA1B,CAA9F;AACA,UAAMI,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMK,YAAY,GAAGV,KAAK,CAACF,WAAN,GAAqBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MAA1E;AACA,WAAO;AACHf,MAAAA,KAAK,EAAEY,YADJ;AAEHX,MAAAA,WAAW,EAAEY;AAFV,KAAP;AAIH;;AACD,MAAGT,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAEA,OAAON,gBAAP;AACH,CAbD;;AAeA,MAAMiB,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE1C,QAAMC,OAAO,GAAGtB,UAAU,CAACE,WAAD,CAA1B;AACA,QAAM,CAACqB,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAlD;;AAEA,QAAMsB,cAAc,GAAIb,IAAD,IAAU;AAC7BY,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,aAAP;AAAsBG,MAAAA,IAAI,EAAEA;AAA5B,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMc,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,aAAP;AAAsBkB,MAAAA,EAAE,EAAEA;AAA1B,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBxB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADD;AAEhBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFP;AAGhBwB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMD,mB;;KAAAA,mB;AA0BN,eAAeA,mBAAf","sourcesContent":["import { useContext, useReducer } from \"react/cjs/react.development\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADDING_ITEM\") {\n        const updatedArray = state.items.includes(action.item) ? state.items.find(action.items.name): state.items.concat(action.item);\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotal = state.totalAmount + (action.item.price * action.item.amount)\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotal\n        }\n    }\n    if(action.type === \"UPDATE_AMOUNT\")\n\n    return defaultCartState;\n}\n\nconst CartContextProvider = ({ children }) => {\n\n    const cartCtx = useContext(CartContext);\n    const [Cartstate, dispatchCartAction] = useReducer(cartReducer,defaultCartState)\n\n    const addItemHandler = (item) => {\n        dispatchCartAction({type: 'ADDING_ITEM', item: item });\n    }\n\n    const removeItemHandler = (id) => {\n        dispatchCartAction({type: 'REMOVE_ITEM', id: id});\n    }\n    const cartContext = {\n        items: Cartstate.items,\n        totalAmount: Cartstate.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler,\n    };\n\n  return(\n    <CartContext.Provider value={cartContext}>\n        {children}\n    </CartContext.Provider>\n    ); \n};\n\nexport default CartContextProvider;"]},"metadata":{},"sourceType":"module"}