{"ast":null,"code":"var _jsxFileName = \"/Users/pedro.sotoibm.com/Desktop/ReactJS Full course/food-order-app/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react/cjs/react.development\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  const updateArray = (items, item) => {\n    return items.map(obj => {\n      if (obj.name === item.name) {\n        return { ...obj,\n          amount: obj.amount + item.amount\n        };\n      }\n\n      return obj;\n    });\n  };\n\n  if (action.type === \"ADDING_ITEM\") {\n    const updatedArray = state.items.includes(action.item) ? updateArray(state.items, action.item) : state.items.concat(action.item); //const updatedItems = state.items.concat(action.item);\n\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedArray,\n      totalAmount: updatedTotal\n    };\n  }\n\n  if (action.type === \"UPDATE_AMOUNT\") return defaultCartState;\n};\n\nconst CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [Cartstate, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADDING_ITEM',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: Cartstate.items,\n    totalAmount: Cartstate.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartContextProvider, \"igpyNwN7J2XGQ5W6Or2mnk9PzVc=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/pedro.sotoibm.com/Desktop/ReactJS Full course/food-order-app/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updateArray","item","map","obj","name","amount","type","updatedArray","includes","concat","updatedTotal","price","CartContextProvider","children","Cartstate","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAMC,WAAW,GAAG,CAACL,KAAD,EAAOM,IAAP,KAAgB;AAChC,WAAON,KAAK,CAACO,GAAN,CAAWC,GAAD,IAAS;AACtB,UAAGA,GAAG,CAACC,IAAJ,KAAaH,IAAI,CAACG,IAArB,EAA2B;AACvB,eAAO,EAAC,GAAGD,GAAJ;AAASE,UAAAA,MAAM,EAAEF,GAAG,CAACE,MAAJ,GAAaJ,IAAI,CAACI;AAAnC,SAAP;AACH;;AAED,aAAOF,GAAP;AACH,KANM,CAAP;AAOH,GARD;;AASA,MAAGJ,MAAM,CAACO,IAAP,KAAgB,aAAnB,EAAkC;AAC9B,UAAMC,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYa,QAAZ,CAAqBT,MAAM,CAACE,IAA5B,IAAoCD,WAAW,CAACF,KAAK,CAACH,KAAP,EAAcI,MAAM,CAACE,IAArB,CAA/C,GAA4EH,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACE,IAA1B,CAAjG,CAD8B,CAE9B;;AACA,UAAMS,YAAY,GAAGZ,KAAK,CAACF,WAAN,GAAqBG,MAAM,CAACE,IAAP,CAAYU,KAAZ,GAAoBZ,MAAM,CAACE,IAAP,CAAYI,MAA1E;AACA,WAAO;AACHV,MAAAA,KAAK,EAAEY,YADJ;AAEHX,MAAAA,WAAW,EAAEc;AAFV,KAAP;AAIH;;AACD,MAAGX,MAAM,CAACO,IAAP,KAAgB,eAAnB,EAEA,OAAOZ,gBAAP;AACH,CAtBD;;AAwBA,MAAMkB,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE1C,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAlD;;AAEA,QAAMsB,cAAc,GAAIf,IAAD,IAAU;AAC7Bc,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,aAAP;AAAsBL,MAAAA,IAAI,EAAEA;AAA5B,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMgB,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,aAAP;AAAsBY,MAAAA,EAAE,EAAEA;AAA1B,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBxB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADD;AAEhBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFP;AAGhBwB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMD,mB;;KAAAA,mB;AAyBN,eAAeA,mBAAf","sourcesContent":["import { useReducer } from \"react/cjs/react.development\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    const updateArray = (items,item) => {\n        return items.map((obj) => {\n            if(obj.name === item.name) {\n                return {...obj, amount: obj.amount + item.amount}\n            }\n    \n            return obj;\n        })\n    } \n    if(action.type === \"ADDING_ITEM\") {\n        const updatedArray = state.items.includes(action.item) ? updateArray(state.items, action.item) : state.items.concat(action.item);\n        //const updatedItems = state.items.concat(action.item);\n        const updatedTotal = state.totalAmount + (action.item.price * action.item.amount)\n        return {\n            items: updatedArray,\n            totalAmount: updatedTotal\n        }\n    }\n    if(action.type === \"UPDATE_AMOUNT\")\n\n    return defaultCartState;\n}\n\nconst CartContextProvider = ({ children }) => {\n\n    const [Cartstate, dispatchCartAction] = useReducer(cartReducer,defaultCartState)\n\n    const addItemHandler = (item) => {\n        dispatchCartAction({type: 'ADDING_ITEM', item: item });\n    }\n\n    const removeItemHandler = (id) => {\n        dispatchCartAction({type: 'REMOVE_ITEM', id: id});\n    }\n    const cartContext = {\n        items: Cartstate.items,\n        totalAmount: Cartstate.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler,\n    };\n\n  return(\n    <CartContext.Provider value={cartContext}>\n        {children}\n    </CartContext.Provider>\n    ); \n};\n\nexport default CartContextProvider;"]},"metadata":{},"sourceType":"module"}